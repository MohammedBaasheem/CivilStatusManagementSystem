<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="exit_btn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEIAAAA4CAYAAABJ7S5PAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAABJ5JREFUaEPtmzFME1EYxzs4ODg4ODg4ODg4ODgymLA4ODg42NB3FImGgRgHDXUx
        kpAwMDgwODA4MJjoQAyJDg4mdjGiMcZENEBbrEiURKIMVVCqnt//8R6W42vvXvte22v8kl9C7t67+96P
        13vv3t0lmhG53t6uvOdl8kKMEpPEA2KGthVzQmwA/I1tOc97KMt43hjqoG62u3uPOlS8Yl6Io9SgQWKa
        GrlGDfIbpAR5JOVyIZ0+pk7TnlHs799PyY5Q41eYhlhFnoPOVUwmD6rTtz7ov3SIkhpX3ZtN3BXynHTu
        uZ6ewyqd5ge6PyWB33I5mGALKMtc0ukjKr3mBH6rregBYaicMipNd6F+Bo+CCbQbJCSLXFXadoMOfJZO
        sho8abtCMtZyqVRapW8n6KA3uJPFArqYqmY0FjgQe4I40aiMjpCgqVdGR0nQmMqgSpldB6mDpatD/o/F
        137p6WN/8cJ5tkw1UB71Nj8u+Msjw2yZOok2vGKWRoVLgcrGLA1d8X+tvvf98lfJxtsXkWWgHMrrur9L
        K9ZkYK4RaSYq7/6YA5gQlKCJIiMoQWNZRlY1l4+CECmuognVJGhqyagmQWNTBl0vBlSzd4a8e2xwwhQm
        QcPJCJOgsSVDTri42ScZGuUqRCWqBE2ljKgSNFLG8LVdORjDjSK0o7iroAHfnmXZpGuBxr+7OGgkQbM+
        +5zNwwSsa+xY/VoU4gRX0IQv9+6wCYfxZ/0zuz2MtftTbB6mLHjeSaVBjhS3uEImFPr65LjPJW0bnAfn
        4/IwRohJKYEukntx4WALGdIMGVYlbFGCA1wkzzA768alDAcSJPSLOC1Xm7idjeBChisJAA6c3VzZlOFS
        ggTDKHWLaXanBWzIcC6BgAP0iFfcTlsU+s8ZTbQqQT3U545rFXKAZTgrIwZHbHoEOcCMsuFbbg4bEjRN
        kFFCj5hldjSETQkalzLgANeIB9zOenEhQeNMBjnAqHGT3VkHLiVoXMiAA2vrk82QoHEgI2NlVQrE9e4T
        4Cle4k0yuY8uFg0/0P3+8gmbcC1avR4B0HY4kHegtOF2sIApWDHCyhGXNAca3/IVKoKuD3elBAQWJ7hC
        pmAtMYqMSgmaqDJsrVluQ3ffSkMigeUq2rDMFjQkTAYnQRMmw7oEz1vd9aIabcRbbFxhY6rJqCVBU02G
        AwnoDROq+f9iXogDmHOzFeogKCOKBE1QhhMJNK2u+sSLDA0wFeoGyf/8MCdXuKNK0KA86m1+yruQgN5w
        STWbD+oVWbZiJyHETOhLrPJl0TZ8UcwiZbRRNbd20HB6nTlAR4C2qWZGC+o+/18U0UEVJ9gDxhEhplSz
        zENNtKbYA8cJakPoxTEsYi/DhoTKwEOQmI0meEc8Y1WCDvUiutPlfytQjjQ6HFdpuwn1U8FLJe3wVn4Q
        5DTmpBdUCxh3+ZTMFOTivBfUihZ/tyG/02irz5vwWRElhUmYkwdGAfCN13jTP1QxCfw+aYTpwlQWN3CW
        RpqyvBkUYgSvOTX1GmAr8DZKPpU6JcXgFSUa12Wjtj513F7/UH9jW1Zee6jLow7qbi+uOotE4i8qNkYl
        XcUJzgAAAABJRU5ErkJggg==
</value>
  </data>
</root>